#
# @see https://github.com/marketplace/actions/setup-php-action
# @see https://github.com/marketplace/actions/mongodb-in-github-actions
# @see https://github.com/elastic/elastic-github-actions
#
name: PHPUnit
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      nginx:
        image: nginx
        ports:
          - 8080:80
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # - name: APT Packages ... Install
      #   run: |
      #     sudo apt-get install -y chromium-chromedriver
      - name: ChromeDriver ... Install
        run: |
          VER=`wget -q -O - https://chromedriver.storage.googleapis.com/LATEST_RELEASE`
          wget https://chromedriver.storage.googleapis.com/$VER/chromedriver_linux64.zip
          sudo unzip chromedriver_linux64.zip -d /usr/local/bin/

      - name: MongoDB ... Install
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.4.4

      - name: Elastic ... Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Elastic ... Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0

      - name: PHP ... Install
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.0
          coverage: none
          ini-values: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M

      - name: Composer ... Get cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer ... Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Composer ... Install dependencies
        run: composer install --prefer-dist

      - name: Nginx Settings
        run: |
          sudo sh -c 'echo "127.0.1.1 neko.vm" >> /etc/hosts'
          sudo cp conf/server/nginx.conf /etc/nginx/conf.d/
          sudo sed -i "s|/var/www/neko|${GITHUB_WORKSPACE}|g" /etc/nginx/conf.d/nginx.conf
          sudo systemctl restart nginx

      - name: Other Settings
        run: |
          cp conf/examples/settings.php conf/
          chmod -R 777 log tmp

      - name: Test!
        run: bin/test
